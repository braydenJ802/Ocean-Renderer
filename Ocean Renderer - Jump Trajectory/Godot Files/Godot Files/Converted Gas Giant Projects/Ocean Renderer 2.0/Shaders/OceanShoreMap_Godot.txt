shader_type spatial;




#define OCEAN_PI 3.1415926

uniform sampler2D Ocean_ShoreMap);
// samplerOcean_ShoreMap);
// xyz - shore map position, 
// w - shore map orthographic size
vec4 Ocean_ShoreMapPosition;
// xy - elevation min max
// zw - distance field min max
vec4 Ocean_ShoreMapRanges;
vec4 Ocean_ShoreModulationValue;
vec4 Ocean_ShoreModulationScale;

vec4 SampleShore(vec2 worldPosXZ)
{
	#ifdef SHORE_ENABLED
	vec2 elevationUV = (worldPosXZ - Ocean_ShoreMapPosition.xz) / Ocean_ShoreMapPosition.w;
	elevationUV = (elevationUV + 1) * 0.5;
	vec4 val = textureLod(Ocean_ShoreMap, float4(elevationUV, 0, 0));
	val.x = lerp(Ocean_ShoreMapRanges.x, Ocean_ShoreMapRanges.y, val.x);
	val.y = lerp(Ocean_ShoreMapRanges.z, Ocean_ShoreMapRanges.w, val.y);
	val.zw = val.zw * 2 - 1;
	return val;
	#else
	return float4(-1000, 0, 0, 0);
	#endif
}

vec4 ShoreModulation(float elevation)
{
	return 1 - clamp(Ocean_ShoreModulationValue * clamp(1 + elevation / Ocean_ShoreModulationScale));
}
#endif